<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Linux常用命令</title>
      <link href="/2023/02/13/linux-command/"/>
      <url>/2023/02/13/linux-command/</url>
      
        <content type="html"><![CDATA[<h2 id="包管理工具"><a href="#包管理工具" class="headerlink" title="包管理工具"></a>包管理工具</h2><h3 id="apt"><a href="#apt" class="headerlink" title="apt"></a>apt</h3><ul><li>简介：apt 是一个高级的包管理系统（主要用于基于 Debian 的系统，如：Ubuntu、Kali）</li><li>语法：<code>apt [选项] [参数] 软包名</code></li><li>参数：<ul><li>-y：对安装过程的所有选择都选择 yes</li></ul></li><li>选项：<ul><li>install：安装软件</li><li>remove：卸载软件</li><li>update：更新本地软件包列表</li><li>upgrade：升级已安装的软件</li><li>dist-upgrade：升级已安装的软件（在软件包依赖关系变化时使用）</li><li>search：搜索软件包</li><li>show：显示软件详细信息</li><li>list –installed：显示已安装的软件</li><li>autoremove：清除缓存</li></ul></li></ul><h3 id="yum"><a href="#yum" class="headerlink" title="yum"></a>yum</h3><ul><li>简介：yum 是一个高级的包管理系统（主要用于基于 Red Hat 的系统，如：Centos）</li><li>语法：<code>yum&nbsp;[选项]&nbsp;[参数] 软件包名</code></li><li>参数：<ul><li>-y：对安装过程的所有选择都选择 yes</li></ul></li><li>选项：<ul><li>install：安装软件</li><li>update：更新软件</li><li>remove：卸载软件</li><li>search all：搜索软件</li><li>check-update：检查已安装的软件是否有新版本</li><li>list installed：显示已安装的软件</li><li>clean all：清理缓存</li></ul></li></ul><h3 id="dnf"><a href="#dnf" class="headerlink" title="dnf"></a>dnf</h3><ul><li>简介：dnf 是 YUM 的后继者，引入了一些改进，如：事务性操作、性能提升等</li><li>语法：<code>dnf [选项] [参数] 软件包名</code></li><li>参数：<ul><li>-y：对安装过程的所有选择都选择 yes</li></ul></li><li>选项：<ul><li>install：安装软件</li><li>update：更新本地软件包列表</li><li>upgrade：升级已安装的软件</li><li>check-update：检查已安装的软件是否有新版本</li><li>remove：卸载软件</li><li>search：搜索软件</li><li>info：显示软件详细信息</li><li>reinstall：重装软件</li><li>clean：清理缓存</li></ul></li></ul><h2 id="系统命令"><a href="#系统命令" class="headerlink" title="系统命令"></a>系统命令</h2><ul><li>关机和重启<ul><li>poweroff：断电关机</li><li>halt：不断电关机，内存等设备保持运行</li><li>reboot：重启</li><li>shutdown [-参数] [选项]：定时关机<ul><li>-P：断电关机</li><li>-h：不断电关机</li><li>-r：重启</li><li>now：立刻关机</li><li>+数字：设定关机延迟时间</li></ul></li></ul></li><li>系统资源相关<ul><li>查看 cpu 信息：cat /proc/cpuinfo</li><li>查看内存使用情况：free -h</li><li>查看磁盘使用情况：df -h</li><li>查看 CPU 使用情况：top [-参数]<ul><li>-d：指定自动刷新间隔（单位：秒）</li><li>-o：根据指定的字段进行排序（如：%CPU）</li></ul></li></ul></li><li>网络相关<ul><li>查看网卡信息：ip a</li><li>添加 IP：ip address add [ip] dev [网卡]</li><li>删除 IP：ip address del [ip] dev [网卡]</li><li>查看路由表：ip r</li><li>添加静态路由：ip route add [ip] via [ip] dev [网卡]</li><li>删除静态路由：ip route del [ip]</li><li>启动网卡：ip link set [网卡] up</li><li>禁用网卡：ip link set [网卡] down</li><li>查看 TCP 连接：ss -t</li><li>查看 UDP 连接：ss -u</li><li>查看监听端口：ss -l</li><li>查看进程和连接：ss -p</li><li>查看网络连接统计信息：ss -s</li><li>查看监听网络端口已经对应的进程 ID：ss -lptn</li><li>释放当前 IP：dhclient -r</li><li>通过 DHCP 服务获取 IP：dhclient [网卡]</li><li>文件下载：curl -C -O [下载地址]</li></ul></li><li>系统相关<ul><li>查看系统信息：hostnamectl status</li><li>修改主机名：hostnamectl set-hostname [hostname]</li></ul></li><li>shell<ul><li>后台执行命令：[命令] &amp;</li><li>清屏：clear、<code>ctrl+l</code></li><li>中断程序：<code>ctrl+c</code></li><li>将前台程序调至后台终止执行：<code>ctrl+z</code></li><li>将后台程序调至前台继续执行：fg</li><li>终止进程执行：kill -9 [pid]</li><li>复制内容：<code>ctrl+insert</code></li><li>粘贴内容：<code>shift+insert</code></li><li>查看命令的源位置：which [命令]</li></ul></li></ul><h2 id="用户和权限"><a href="#用户和权限" class="headerlink" title="用户和权限"></a>用户和权限</h2><ul><li>su - [用户名]：登录到指定用户</li><li>sudo [命令]：使用 root 权限执行命令</li><li>w：显示登录到系统的用户列表，并展示他们正在执行的命令</li><li>who：显示登录到系统的用户的信息</li><li>whoami：显示当前用户的名称</li><li>groups [用户名]：显示用户所属组</li><li>id [用户名]：显示用户的信息，默认查看当前用户（uid、gid、所属组）</li><li>添加用户：useradd [-参数] [用户名]<ul><li>-g：指定用户的用户组</li><li>-u：指定用户 UID</li><li>-c：添加用户备注</li><li>-M：不创建用户主目录</li><li>-d：指定用户主目录</li></ul></li><li>修改用户：usermod [-参数] [用户名]<ul><li>-g：指定用户的用户组</li><li>-G：指定用户追加组（追加组影响用户员组）</li><li>-c：添加用户备注</li><li>-L：锁定账户，禁止登录</li><li>-U：解锁账户，允许登录</li></ul></li><li>删除用户：userdel [-参数] [用户名]（-r：删除用户的主目录）</li><li>添加用户组：groupadd [-参数] [组名]（-g：指定用户 GID）</li><li>修改用户组：groupmod [-参数] [组名]（-g：指定用户 GID）</li><li>删除用户组：groupdel [组名]</li><li>用户组操作：gpasswd [-参数] [组名]<ul><li>-a：添加用户到组中</li><li>-d：从组中删除用户</li><li>-A：指定组管理员</li></ul></li></ul><h2 id="文件目录"><a href="#文件目录" class="headerlink" title="文件目录"></a>文件目录</h2><ul><li>cd [目录]：跳转到指定目录</li><li>cd /：跳转到根目录</li><li>cd ~：跳转到用户的主目录</li><li>cd -：跳转到上一个目录</li><li>pwd：查看当前目录</li><li>mkdir [目录]：创建目录</li><li>rm [-参数] [目录/文件]：删除文件或目录 （-r 操作目录，-f 强制删除）</li><li>mv [原位置] [新位置]：移动文件或目录到的位置 (如果移动的位置相同则表示改名)</li><li>cp [目录/文件] [位置]：拷贝目录或文件到指定位置</li><li>stat [目录/文件]：查看目录或文件的属性信息</li><li>查看目录内容：ls [-参数] [目录]<ul><li>-l：以长格式显示，包括文件权限、所有者、组、文件大小、修改时间</li><li>-a：显示所有文件，包括隐藏文件</li><li>-h：以合适的单位显示文件大小</li><li>-t：按创建时间排序</li><li>-S：按文件大小排序</li><li>-r：反向排序</li></ul></li><li>查看文件内容<ul><li>cat [文件]：显文件内容，只适合内容少的文件</li><li>less [文件]：按页显示文件内容<ul><li>b 键：上一页</li><li>空格：下一页</li><li>g：跳转到第一页</li><li>G：跳转到最后一页</li><li>q 键：退出</li><li>输入/[内容]：搜索文件</li><li>n 键：跳转到下一个匹配搜索的内容</li><li>N 键：跳转到上一个匹配搜索的内容</li></ul></li><li>head [-参数] [文件]：显示文件前 10 行（-数字：显示行数）</li><li>tail [-参数] [文件]：显示文件后 10 行（-数字：显示行数，-f：监控文件更新）</li></ul></li><li>文件权限<ul><li>设置文件权限：chmod [-参数] [权限] [文件/目录]<ul><li>参数：-R（表递归的修改目录的子目录和文件）</li><li>权限：数字表示（4-读、2-写、1-执行）字母表示（r-读、w-写、x-执行）<ul><li>u+rwx：表示给文件所有者加上文件读写执行的权限</li><li>g=rwx：表示给文件所属组设置文件读写执行的权限</li><li>o-rwx：表示给其他用户移除文件读写执行的权限</li><li>u=rw,g=x,o=：表示给文件所有者设置文件读写权限，给文件所属组设置文件执行权限，给其他用户设置文件权限为空</li><li>777：每个数字依次表示为：文件所有者、文件所属组、其他用户，都设置读写执行权限（7=4 读+2 写+1 执行）</li></ul></li></ul></li><li>修改文件所有者：chown [-参数] [所有者] [文件/目录]</li><li>修改用户所属组：chown [-参数] [所属组] [文件/目录]<ul><li>参数：-R（表递归的修改目录的子目录和文件）</li></ul></li></ul></li></ul><h2 id="解压缩"><a href="#解压缩" class="headerlink" title="解压缩"></a>解压缩</h2><ul><li>常用的压缩格式<ul><li><code>tar</code>：tar 打包文件，将多个文件归档为一个文件</li><li><code>gz</code>：gz 压缩文件，压缩速度快、压缩比较低，压缩目录前需要使用 tar 先打包</li><li><code>bz2</code>：bzip2 压缩文件，压缩速度较慢、压缩比较高、支持直接压缩目录</li><li><code>xz</code>：xz 压缩文件，压缩速度最慢、压缩最高</li><li><code>zip</code>：zip 压缩，广泛支持的格式，适用于 Window 和 Linux</li><li><code>rar</code>：rar 压缩，Windows 支持但 Linux 默认不支持，需要单独下载<code>rar</code>和<code>unrar</code>工具操作</li></ul></li><li>归档和解压缩<ul><li>tar [-参数] [压缩文件名] [文件/目录]<ul><li>-v：显示处理过程</li><li>-f：指定归档文件</li><li>-c：创建归档文件</li><li>-x：拆解归档文件</li><li>-z：使用 gz 进行解压缩</li><li>-j：使用 bz2 进行解压缩</li><li>-J：使用 xz 进行解压缩</li></ul></li><li>常用命令参数<ul><li>tar 归档：tar -cvf [压缩文件名].tar [文件/目录]</li><li>tar 拆解：tar -xvf [压缩文件名].tar</li><li><strong>gz 压缩：tar -czvf [压缩文件名].tar.gz [文件/目录]</strong></li><li><strong>gz 解压：tar -xzvf [压缩文件名].tar.gz</strong></li><li>bz2 压缩：tar -cjvf [压缩文件名].tar.bz2 [文件/目录]</li><li>bz2 解压：tar -xjvf [压缩文件名].tar.bz2</li><li>xz 压缩：tar -cJvf [压缩文件名].tar.xz [文件/目录]</li><li>xz 解压：tar -xJvf [压缩文件名].tar.xz</li></ul></li></ul></li></ul><h2 id="文件查找"><a href="#文件查找" class="headerlink" title="文件查找"></a>文件查找</h2><ul><li>find [路径] [-参数]（路径用于指定从什么地方开始查找）<ul><li>-name：指定文件的名称，支持通配符<code>*</code>和<code>?</code>，表示匹配多个和一个字符</li><li>-type：指定文件的类型（f：文件；d：目录；l：链接）</li><li>-size：指定文件的大小（+1G 表示大于 1GB；-10k 表示小于 10KB）</li><li>-user：指定文件的所有者</li><li>-group：指定文件的所属组</li><li>-mtime：指定文件的修改的日期（+3 表示 3 天前；-2 表示 2 天内）</li></ul></li></ul><h2 id="日期管理"><a href="#日期管理" class="headerlink" title="日期管理"></a>日期管理</h2><ul><li>时间和时区管理：<ul><li>查看时间和时区信息：timedatectl</li><li>查看可用的所有时区：timedatectl list-timezones</li><li>设置时区：timedatectl set-timezone [时区]</li><li>设置时间：timedatectl set-time [时间]</li></ul></li><li>查看当前时间：date</li><li>格式化语法：date +”格式化表达式”<ul><li>%F：完整年月日（等价于 <code>%Y-%m-%d</code>）</li><li>%T：时分秒（等价于<code>%H:%M:%S</code>）</li><li>%R：时分（等价于<code>%H:%M</code>）</li><li>%Y：年份</li><li>%y：年份（后两位）</li><li>%m：月份</li><li>%d：日期</li><li>%H：小时（24 小时制）</li><li>%l：小时（12 小时制）</li><li>%M：分钟</li><li>%S：秒种</li><li>%A：星期</li><li>%p：上午/下午</li><li>%s：时间戳</li></ul></li></ul><h2 id="进程管理"><a href="#进程管理" class="headerlink" title="进程管理"></a>进程管理</h2><ul><li>ps -aux：查看系统所有进程<ul><li>USER：进程的启动者</li><li>PID：进程 ID</li><li>%CPU：使用 CPU 的占比</li><li>%MEM：使用内存的占比</li><li>VSZ：虚拟内存的使用量（单位 KB）</li><li>RSS：物理内存的使用量（单位 KB）</li><li>TTY：所在终端</li><li>STAT：状态</li><li>START：启动时间</li><li>TIME：使用 CPU 的积累时长</li><li>COMMAND：启动进程的命令和参数</li></ul></li><li>ps -ef：查看父子进程之间的关系<ul><li>UID：进程的启动者</li><li>PID：进程 ID</li><li>PPID：父进程的 PID</li><li>C：使用 CPU 的占比</li><li>STIME：启动时间</li><li>TTY：所在终端</li><li>TIME：使用 CPU 的积累时长</li><li>CMD：启动进程的命令和参数</li></ul></li></ul><h2 id="服务管理"><a href="#服务管理" class="headerlink" title="服务管理"></a>服务管理</h2><ul><li>systemctl [操作] [服务]<ul><li>status：查看服务状态</li><li>start：启动服务</li><li>stop：停止服务</li><li>restart：重启服务</li><li>enable：设置服务开机自启</li><li>disable：关闭服务开机自启</li><li>list-unit-files：查看已安装的服务列表及其状态</li></ul></li></ul><h2 id="定时任务"><a href="#定时任务" class="headerlink" title="定时任务"></a>定时任务</h2><ul><li>crontab 配置文件：/etc/crontab</li><li>crontab -l：显示计划任务列表</li><li>crontab -e：编辑 crontab 文件</li></ul><figure class="highlight subunit"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs subunit">每行代表一项计划任务，分为6段，前5段为时间设定，第6段为要执行的命令，关系如下：<br>分 时 日 月 周 命令<br>时间参数取值范围：分 0<span class="hljs-string">-59</span>、时 0<span class="hljs-string">-23</span>、日 1<span class="hljs-string">-31</span>、月 1<span class="hljs-string">-12</span>、周 0<span class="hljs-string">-7</span>（0/7都表示周日）<br>通配符：<br>*：表示取值范围中所有数字<br>/：表示每隔一段时间，如： */1 * * * * 表示每分钟执行<br>-：表示一个区间范围，如： * * 1<span class="hljs-string">-3</span> * * 表示每月1<span class="hljs-string">-3</span>号执行<br>,：表示不连续的值，如： * * 1,3,5 * * 表示每月1,3,5号执行<br></code></pre></td></tr></tbody></table></figure><h2 id="防火墙管理"><a href="#防火墙管理" class="headerlink" title="防火墙管理"></a>防火墙管理</h2><ul><li>firewall-cmd [选项]<ul><li>查看已有规则：–list-all</li><li>重新加载规则：–reload</li><li>查询是否开启端口：–query-port=[端口]/[协议]</li><li>端口配置：–zone=public –[add/remove]-port=[端口]/[协议] –permanent<ul><li>–add-port：添加开放端口</li><li>–remove-port：删除开放端口</li><li>–permanent：永久开启，不设置此项重启失效</li><li>–zone：作用域</li></ul></li><li>查看开放的服务：–get-services</li><li>配置服务：–zone=public –[add/remove]-service=[服务] –permanent<ul><li>–add-service：添加服务</li><li>–permanent：永久开启，不设置此项重启失效</li><li>–zone：作用域</li></ul></li></ul></li><li>iptables</li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Hexo和Gitpage部署个人博客</title>
      <link href="/2023/01/20/deploy-hexo-blog/"/>
      <url>/2023/01/20/deploy-hexo-blog/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo-Fluid-博客搭建博客"><a href="#Hexo-Fluid-博客搭建博客" class="headerlink" title="Hexo&amp;Fluid 博客搭建博客"></a>Hexo&amp;Fluid 博客搭建博客</h1><h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><p><a href="https://hexo.io/index.html">Hexo</a>是一个基于<a href="https://nodejs.org/en">Node.js</a>的静态网站生成器，用于快速、简单地创建个人或团队博客。Hexo 的设计目标是轻量、快速、易用，它可以帮助用户将 Markdown 文档转换为静态网页，方便发布到服务器上。</p><p>Hexo 有以下特点：</p><ol><li><strong>Markdown 支持：</strong> Hexo 使用 Markdown 语法，使得用户可以专注于内容创作而无需关心繁琐的 HTML 代码。</li><li><strong>主题和插件：</strong> Hexo 支持丰富的主题和插件，用户可以根据自己的需求选择合适的主题，并通过插件扩展功能。</li><li><strong>静态文件生成：</strong> Hexo 生成的网站是基于静态文件的，这意味着它可以轻松地部署到各种托管服务，如 GitHub Pages、Netlify 等。</li><li><strong>快速构建：</strong> Hexo 具有快速的构建速度，这对于博客或需要频繁更新内容的网站是非常有利的。</li><li><strong>一键部署：</strong> Hexo 提供了方便的一键部署功能，可以轻松地将生成的静态网站上传到服务器或托管平台。</li></ol><h2 id="安装-Node-和-NPM"><a href="#安装-Node-和-NPM" class="headerlink" title="安装 Node 和 NPM"></a>安装 Node 和 NPM</h2><ol><li><p>前往<a href="https://nodejs.org/en/download/current">Node 官网</a>下载 Node 安装包，建议下载 LTS 版本，也就是长期支持版本</p><p><img src="./images/1.jpg" alt="1"></p></li><li><p>安装 Node（安装过程一路下一步就可以了）</p></li><li><p>安装完毕之后，按<code>Win+R</code> 输入<code>cmd</code> ，在弹出的命令行中输入<code>node --version</code> 和<code>npm --version</code>，如果打印出版本信息那么恭喜你安装成功了！</p><p><img src="./images/2.jpg" alt="2"></p></li></ol><h2 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h2><ol><li><p>打开 CMD 窗口，执行命令</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install -g hexo-cli<br></code></pre></td></tr></tbody></table></figure></li><li><p>初始化 Hexo，并运行</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">初始化Hexo项目</span><br>hexo init<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">启动Hexo服务，按Ctrl+C可以关闭Hexo服务</span><br>hexo server<br></code></pre></td></tr></tbody></table></figure></li><li><p>通过浏览器打开网址<code>http://localhost:4000</code>，就可以看到简单的初始页面</p><p><img src="./images/3.png" alt="3"></p></li></ol><h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><ol><li><p>可以前往<a href="https://hexo.io/themes/">Hexo 官方主题演示</a>选择一个自己喜欢的主题，也可以查看这篇文章「<a href="/2023/01/04/hexo-themes/" target="_blank">Hexo 博客主题推荐</a>」，其中是我个人比较推荐的主题。</p></li><li><p>将主题下载后，将其放入 Hexo 博客目录的<code>themes</code>目录下</p><p><img src="./images/4.jpg" alt="4"></p></li><li><p>修改根目录下的<code>_config.yml</code>配置文件，找到 theme 参数，修改为你下载的主题的目录名</p><p><img src="./images/5.jpg" alt="5"></p></li><li><p>清理缓存，重新运行</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">清理缓存</span><br>hexo clean<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">重新启动Hexo服务</span><br>hexo server<br></code></pre></td></tr></tbody></table></figure></li><li><p>通过浏览器打开网址<code>http://localhost:4000</code>，就可以看到更换主题后的博客页面</p><p><img src="./images/6.jpg" alt="6"></p></li><li><p>至此基于 Hexo 的博客就搭建完毕了</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Github </tag>
            
            <tag> Gitpage </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客主题推荐</title>
      <link href="/2023/01/04/hexo-themes/"/>
      <url>/2023/01/04/hexo-themes/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo-主题推荐"><a href="#Hexo-主题推荐" class="headerlink" title="Hexo 主题推荐"></a>Hexo 主题推荐</h1><ul><li>Vivia<ul><li>Demo: <a href="https://saicaca.github.io/vivia-preview/">https://saicaca.github.io/vivia-preview/</a></li><li>Github: <a href="https://github.com/saicaca/hexo-theme-vivia">https://github.com/saicaca/hexo-theme-vivia</a></li><li>简介: 简洁、ui 圆润、界面美观</li></ul></li><li>LiveMylife<ul><li>Demo: <a href="https://v-vincen.life/">https://v-vincen.life/</a></li><li>Github: <a href="https://github.com/V-Vincen/hexo-theme-livemylife">https://github.com/V-Vincen/hexo-theme-livemylife</a></li><li>简介: 比较简洁、主文字 ui</li></ul></li><li>Claudia<ul><li>Demo: <a href="https://haojen.github.io/Claudia-theme-blog/">https://haojen.github.io/Claudia-theme-blog/</a></li><li>Github: <a href="https://github.com/Haojen/hexo-theme-Claudia/tree/master">https://github.com/Haojen/hexo-theme-Claudia/tree/master</a></li><li>简介: 简洁、动画少、有自适应亮/暗模式</li></ul></li><li>aurora<ul><li>Demo: <a href="https://tridiamond.tech/">https://tridiamond.tech/</a></li><li>Github: <a href="https://github.com/auroral-ui/hexo-theme-aurora">https://github.com/auroral-ui/hexo-theme-aurora</a></li><li>简介: 界面美观、赛博风格、动画多</li></ul></li><li>fluid<ul><li>Demo: <a href="https://hexo.fluid-dev.com/">https://hexo.fluid-dev.com/</a></li><li>Github: <a href="https://github.com/fluid-dev/hexo-theme-fluid">https://github.com/fluid-dev/hexo-theme-fluid</a></li><li>简介: 比较简介、Material Design 风格</li></ul></li><li>shoka<ul><li>Demo: <a href="https://shoka.lostyu.me/">https://shoka.lostyu.me/</a></li><li>Github: <a href="https://github.com/amehime/hexo-theme-shoka">https://github.com/amehime/hexo-theme-shoka</a></li><li>简介: 动画多、有点小 bug</li></ul></li><li>shoka<ul><li>Demo: <a href="https://www.mrcore.cn/">https://www.mrcore.cn/</a></li><li>Github: <a href="https://github.com/mrcore/hexo-theme-Anatole-Core">https://github.com/mrcore/hexo-theme-Anatole-Core</a></li><li>简介: 简洁、动画少</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo文章Front-matter编写规则</title>
      <link href="/2022/12/27/hexo-front-matter/"/>
      <url>/2022/12/27/hexo-front-matter/</url>
      
        <content type="html"><![CDATA[<h2 id="Hexo-文章-Front-matter-编写规则"><a href="#Hexo-文章-Front-matter-编写规则" class="headerlink" title="Hexo 文章 Front-matter 编写规则"></a>Hexo 文章 Front-matter 编写规则</h2><p>本文参考了 Hexo 官方的<a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter 编写规则</a>，但是这里只介绍常用的规则。<br>Hexo Front-matter 是文章的最上方，使用<code>---</code> 分割的区域，在其中设置文章的基础信息。<br>常用的规则及其作用如下：</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 以下部分是建议需要填写的文章信息</span><br><span class="hljs-comment"># 文章标题</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">Hexo文章Front-matter编写规则</span><br><span class="hljs-comment"># 文章摘要</span><br><span class="hljs-attr">excerpt:</span> <span class="hljs-string">Hexo文章Front-matter用于设置文章的基础信息，例如：标题、简介、分类、标签、文章创建和修改日期等。</span><br><span class="hljs-comment">#文章日期</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2023-12-16 12:00:00</span><br><span class="hljs-comment"># 文章分类</span><br><span class="hljs-attr">categories:</span><br>  <span class="hljs-comment"># 子分类A和子分类B都是父分类B的子分类，他们同级</span><br>  <span class="hljs-bullet">-</span> [<span class="hljs-string">父分类A</span>, <span class="hljs-string">子分类A</span>]<br>  <span class="hljs-bullet">-</span> [<span class="hljs-string">父分类A</span>, <span class="hljs-string">子分类B</span>]<br>  <span class="hljs-comment"># 同级的分类必须写在[]内</span><br>  <span class="hljs-bullet">-</span> [<span class="hljs-string">父分类B</span>]<br><span class="hljs-comment"># 文章标签</span><br><span class="hljs-attr">tags:</span> [<span class="hljs-string">标签A</span>, <span class="hljs-string">标签B</span>]<br><br><span class="hljs-comment"># 以下部分是可以不填写的文章信息</span><br><span class="hljs-attr">index_img:</span> <span class="hljs-string">/images/default.png</span> <span class="hljs-comment">#文章封面</span><br><span class="hljs-attr">banner_img:</span> <span class="hljs-string">/images/default.png</span> <span class="hljs-comment">#顶部大图</span><br><span class="hljs-attr">updated:</span> <span class="hljs-number">2023-12-16 18:00:00</span> <span class="hljs-comment">#文章更新日期</span><br><span class="hljs-attr">hide:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># 是否隐藏文章</span><br><span class="hljs-attr">active:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># 让文章在首页隐藏，在归档中仍然显示</span><br><span class="hljs-attr">sticky:</span> <span class="hljs-number">1</span> <span class="hljs-comment"># 设置文章显示优先级，值越大越靠前</span><br><span class="hljs-attr">comments:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># 是否允许评论</span><br><span class="hljs-attr">published:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># 文章是否发布</span><br></code></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Front-matter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello, TBlog!</title>
      <link href="/2022/12/27/hello-tblog/"/>
      <url>/2022/12/27/hello-tblog/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是-TBlog？"><a href="#什么是-TBlog？" class="headerlink" title="什么是 TBlog？"></a>什么是 TBlog？</h2><p>TBlog 译为「TIAN’s Blog」，是的我叫 TIAN，是一名前 Java 全栈开发者，目前在学习网络安全。TBlog 算是我的个人博客，主要用于记录一些我在学习路上学习到的技术以及遇到的问题，当然也希望能够帮助和我遇到相同问题的朋友，也欢迎评论和留言。</p><p>第一版本的 TBlog 使用的是<a href="https://hexo.io/zh-cn/">Hexo</a>和 <a href="https://pages.github.com/">Gitpage</a> 进行部署，主题使用的是<a href="https://github.com/fluid-dev/hexo-theme-fluid">Fluid</a>。</p><p>这是我在 TBlog 发布的第一篇文章，后续我也会在这上面分享更多的文章或者笔记。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
